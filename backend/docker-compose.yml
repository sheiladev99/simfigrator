version: '3.9'

services:
  backend:
    build:
      context: ./
      dockerfile: ./Dockerfile
      target: build-${DJANGO_ENV}
    restart: unless-stopped
    container_name: ${APP_NAME}_backend_${DJANGO_ENV}
    hostname: ${APP_NAME}_backend_${DJANGO_ENV}
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
      - "5566:5566"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8000/health || exit 1
      interval: 10s
      retries: 8
      start_period: 5s
      timeout: 5s

  database:
    image: postgres:14-alpine
    restart: unless-stopped
    container_name: ${APP_NAME}_postgres_${DJANGO_ENV}
    hostname: ${APP_NAME}_postgres_${DJANGO_ENV}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_EXPOSE_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 3s
      retries: 10
      start_period: 5s
      timeout: 3s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    container_name: ${APP_NAME}_redis_${DJANGO_ENV}
    hostname: ${APP_NAME}_redis_${DJANGO_ENV}
    volumes:
      - ./redis_data:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=${REDIS_DISABLE_COMMANDS}
      - REDIS_PORT=${REDIS_PORT}
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      retries: 10
      start_period: 5s
      timeout: 3s
